.nlist

;macro.mac - RUKA assembler macro for X680x0/Human68k(v3) by TcbnErik
;Last-modified: 2025-01-20
;
;Copying and distribution of this file, with or without modification,
;are permitted in any medium without royalty provided the copyright
;notice and this notice are preserved.  This file is offered as-is,
;without any warranty.


.ifndef __macro_mac__
        __macro_mac__:=1


* Constant ------------------------------------ *

SR_T:  .equ 15
SR_T1: .equ 15
SR_T0: .equ 14
SR_S:  .equ 13
SR_M:  .equ 12
SR_I2: .equ 10
SR_I1: .equ 9
SR_I0: .equ 8
CCR_X: .equ 4
CCR_N: .equ 3
CCR_Z: .equ 2
CCR_V: .equ 1
CCR_C: .equ 0

SR_I_MASK: .equ (1<<SR_I2+1<<SR_I1+1<<SR_I0)


* User Macro ---------------------------------- *

PUSH: .macro regs
  movem.l regs,-(sp)
.endm

POP: .macro regs
  movem.l (sp)+,regs
.endm

DI: .macro
  ori #SR_I_MASK,sr
.endm

EI: .macro
  andi #.not.SR_I_MASK,sr
.endm

PUSH_SR_DI: .macro
  move sr,-(sp)
  DI
.endm

POP_SR: .macro
  move (sp)+,sr
.endm

STRCPY: .macro src,dst,rewind
  .sizem sz,argc
  @loop:
    move.b (src)+,(dst)+
  bne @loop
  .if argc>=3
    subq.l #-(rewind),dst
  .endif
.endm

STREND: .macro areg,offset
  .sizem sz,argc
  @loop:
    tst.b (areg)+
  bne @loop
  .if argc<=1
    subq.l #1,areg
  .elif (offset).sle.0
    subq.l #1-(offset),areg
  .elif (offset).sge.2
    addq.l #(offset)-1,areg
  .endif
.endm

STRCAT: .macro src,dst,rewind
  .sizem sz,argc
  STREND dst
  .if argc>=3
    STRCPY src,dst,rewind
  .else
    STRCPY src,dst
  .endif
.endm

STRLEN: .macro areg,dreg,offset
  .sizem sz,argc
  move.l areg,dreg
  .if argc>=3
    STREND areg,offset
  .else
    STREND areg
  .endif
  exg dreg,areg
  sub.l areg,dreg
.endm

;areg is clobbered
STRLEN_CLOB: .macro areg,dreg
  .sizem sz,argc
  .fail argc.ne.2
  move.l areg,dreg
  @loop:
    tst.b (areg)+
  bne @loop
  sub.l areg,dreg
  not.l dreg
.endm


* End of File --------------------------------- *

.endif

.list
